filter(atencao_feto_nascido == T) %>%
na.omit()
dados_mortalidade_atencao_feto <- sumarizar_dados_por_ano(dados_mortalidade_atencao_feto, "i_ano_obito", "i_ano_obito") %>% select(-c(grupo))
dados_nasc_vivos_atencao_feto <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_ano_nasc") %>% select(-c(grupo))
dados_mort_nasc_atencao_feto =  unir_mortalidade_nascidos_vivos_simples(dados_mortalidade_atencao_feto, dados_nasc_vivos_atencao_feto, colunas_em_comum = c('ano'))
dados_mort_nasc_atencao_feto_2018_2022 = dados_mort_nasc_atencao_feto %>%
select(-c(freq.y,log_taxa_mort)) %>%
pivot_wider(names_from = c("ano"), values_from = c("taxa_mort","freq.x")) %>%
select(freq.x_2018, taxa_mort_2018,
freq.x_2019, taxa_mort_2019,
freq.x_2020, taxa_mort_2020,
freq.x_2021, taxa_mort_2021,
freq.x_2022, taxa_mort_2022) %>%
na.omit()
pw_data_atencao_feto = calculate_prais_winsten_summary_simples(dados_mort_nasc_atencao_feto, 'Atenção ao recém-nascido')
dados_atencao_feto = criar_tabela_prais_winsten_summary_total_simples(dados_mort_nasc_atencao_feto_2018_2022, pw_data_atencao_feto)
#Ações adequadas de promoção à saúde
dados_mortalidade_promocacao_saude = dados_mortalidade %>%
filter(promocao_saude == T) %>%
na.omit()
dados_mortalidade_promocacao_saude <- sumarizar_dados_por_ano(dados_mortalidade_promocacao_saude, "i_ano_obito", "i_ano_obito") %>% select(-c(grupo))
dados_nasc_vivos_promocacao_saude <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_ano_nasc") %>% select(-c(grupo))
dados_mort_nasc_promocacao_saude =  unir_mortalidade_nascidos_vivos_simples(dados_mortalidade_promocacao_saude, dados_nasc_vivos_promocacao_saude, colunas_em_comum = c('ano'))
dados_mort_nasc_promocacao_saude_2018_2022 = dados_mort_nasc_promocacao_saude %>%
select(-c(freq.y,log_taxa_mort)) %>%
pivot_wider(names_from = c("ano"), values_from = c("taxa_mort","freq.x")) %>%
select(freq.x_2018, taxa_mort_2018,
freq.x_2019, taxa_mort_2019,
freq.x_2020, taxa_mort_2020,
freq.x_2021, taxa_mort_2021,
freq.x_2022, taxa_mort_2022) %>%
na.omit()
pw_data_promocacao_saude = calculate_prais_winsten_summary_simples(dados_mort_nasc_promocacao_saude, 'Ações adequadas de promoção à saúde')
dados_promocacao_saude = criar_tabela_prais_winsten_summary_total_simples(dados_mort_nasc_promocacao_saude_2018_2022, pw_data_promocacao_saude)
a = dados_causas_evitavel
colnames(a) = 1:dim(a)[2]
b = dados_assistencia_gestacao
colnames(b) = 1:dim(b)[2]
c = dados_atencao_parto
colnames(c) = 1:dim(c)[2]
d = dados_atencao_feto
colnames(d) = 1:dim(d)[2]
e = dados_promocacao_saude
colnames(e) = 1:dim(e)[2]
rbind(a,b,c,d,e) %>%
kbl(caption="Mortalidade nas variáveis demográficas e sua respectiva taxa de mortalidade(por 1000 nascidos vivos), nos anos 2018 e 2022.",booktabs=T, col.names = c("Variáveis","n","Taxa","n","Taxa","n","Taxa","n","Taxa","n","Taxa","p","VPA(%)","IC95%","Tendência"),format =  "latex") %>%
kable_styling(position = "center",latex_options=c("striped","HOLD_position","scale_down")) %>%
add_header_above(c(" " = 1, "2018" = 2, "2019" = 2, "2020" = 2, "2021" = 2, "2022" = 2)) %>%
footnote(number = c('n: Número de óbitos relacionados a causas evitáveis',
"Taxa: Taxa de mortalidade envolvendo óbitos por causas evitáveis",
"VPA(%): Porcentagem de variação anual"))
dados_mortalidade_regiao <- sumarizar_dados_por_ano(dados_mortalidade, "i_ano_obito", "i_desc_regiao_saude_res")
dados_nasc_vivos_regiao <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_desc_regiao_saude_estab")
dados_mort_nasc_regiao = unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,
c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
setwd("D:/projetos/consultoria/Carol")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = F)
library(tidyverse)
library(data.table)
library(readxl)
library(knitr)
library(kableExtra)
library(prais)
source("utils.R")
dados_mortalidade_regiao <- sumarizar_dados_por_ano(dados_mortalidade, "i_ano_obito", "i_desc_regiao_saude_res")
dados_nasc_vivos_regiao <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_desc_regiao_saude_estab")
dados_mort_nasc_regiao = unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,
c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
dados_mortalidade_regiao <- sumarizar_dados_por_ano(dados_mortalidade, "i_ano_obito", "i_desc_regiao_saude_res")
dados_nasc_vivos_regiao <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_desc_regiao_saude_estab")
dados_mort_nasc_regiao = unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,
c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
dados_mortalidade_regiao <- sumarizar_dados_por_ano(dados_mortalidade, "i_ano_obito", "i_desc_regiao_saude_res")
dados_nasc_vivos_regiao <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_desc_regiao_saude_estab")
dados_mort_nasc_regiao = unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
setwd("D:/projetos/consultoria/Carol")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = F)
library(tidyverse)
library(data.table)
library(readxl)
library(knitr)
library(kableExtra)
library(prais)
source("utils.R")
dados_mortalidade_regiao <- sumarizar_dados_por_ano(dados_mortalidade, "i_ano_obito", "i_desc_regiao_saude_res")
dados_nasc_vivos_regiao <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_desc_regiao_saude_estab")
dados_mort_nasc_regiao = unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
dados_mort_nasc_regiao_2018_2022 = pegar_dados_mortalidade_nascidos_vivos_total(dados_mort_nasc_regiao)
pw_data_regiao = calculate_prais_winsten_summary(dados_mort_nasc_regiao, "grupo", "log_taxa_mort", "ano")
unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
dados_mort_nasc_regiao = unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
dados_mort_nasc_regiao_2018_2022 = pegar_dados_mortalidade_nascidos_vivos_total(dados_mort_nasc_regiao)
pegar_dados_mortalidade_nascidos_vivos_total(dados_mort_nasc_regiao)
calculate_prais_winsten_summary(dados_mort_nasc_regiao, "grupo", "log_taxa_mort", "ano")
dados_mort_nasc_regiao
```{r include=FALSE}
dados_mortalidade_regiao <- sumarizar_dados_por_ano(dados_mortalidade, "i_ano_obito", "i_desc_regiao_saude_res")
dados_nasc_vivos_regiao <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_desc_regiao_saude_estab")
unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,
c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
source("utils.R")
unir_mortalidade_nascidos_vivos(dados_mortalidade_regiao, dados_nasc_vivos_regiao,
c("Contratado/Credenciado","Privado","","URD","Região Centro-Sul","Não Informado"))
dados_mortalidade_regiao
dados_nasc_vivos_regiao
dados_mortalidade_regiao
#causas evitáveis
dados_mortalidade_causas_evitavel = dados_mortalidade %>%
filter(morte_evitavel == T) %>%
na.omit()
dados_mortalidade_causas_evitavel <- sumarizar_dados_por_ano(dados_mortalidade_causas_evitavel, "i_ano_obito", "i_ano_obito") %>% select(-c(grupo))
dados_nasc_vivos_causas_evitavel <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_ano_nasc") %>% select(-c(grupo))
dados_mort_nasc_causas_evitavel =  unir_mortalidade_nascidos_vivos_simples(dados_mortalidade_causas_evitavel, dados_nasc_vivos_causas_evitavel, colunas_em_comum = c('ano'))
#causas evitáveis
dados_mortalidade_causas_evitavel = dados_mortalidade %>%
filter(morte_evitavel == T) %>%
na.omit()
dados_mortalidade_causas_evitavel <- sumarizar_dados_por_ano(dados_mortalidade_causas_evitavel, "i_ano_obito", "i_ano_obito") %>% select(-c(grupo))
dados_nasc_vivos_causas_evitavel <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_ano_nasc") %>% select(-c(grupo))
dados_mort_nasc_causas_evitavel =  unir_mortalidade_nascidos_vivos_simples(dados_mortalidade_causas_evitavel, dados_nasc_vivos_causas_evitavel, colunas_em_comum = c('ano'))
dados_mortalidade_causas_evitavel
dados_nasc_vivos_causas_evitavel
source("utils.R")
#causas evitáveis
dados_mortalidade_causas_evitavel = dados_mortalidade %>%
filter(morte_evitavel == T) %>%
na.omit()
dados_mortalidade_causas_evitavel <- sumarizar_dados_por_ano(dados_mortalidade_causas_evitavel, "i_ano_obito", "i_ano_obito") %>% select(-c(grupo))
dados_nasc_vivos_causas_evitavel <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_ano_nasc") %>% select(-c(grupo))
dados_mort_nasc_causas_evitavel =  unir_mortalidade_nascidos_vivos_simples(dados_mortalidade_causas_evitavel, dados_nasc_vivos_causas_evitavel, colunas_em_comum = c('ano'))
dados_mort_nasc_causas_evitavel_2018_2022 = dados_mort_nasc_causas_evitavel %>%
select(-c(grupo,grupo.y,freq.y,log_taxa_mort)) %>%
pivot_wider(names_from = c("ano"), values_from = c("taxa_mort","freq.x")) %>%
select(freq.x_2018, taxa_mort_2018,
freq.x_2019, taxa_mort_2019,
freq.x_2020, taxa_mort_2020,
freq.x_2021, taxa_mort_2021,
freq.x_2022, taxa_mort_2022) %>%
na.omit()
#causas evitáveis
dados_mortalidade_causas_evitavel = dados_mortalidade %>%
filter(morte_evitavel == T) %>%
na.omit()
dados_mortalidade_causas_evitavel <- sumarizar_dados_por_ano(dados_mortalidade_causas_evitavel, "i_ano_obito", "i_ano_obito") %>% select(-c(grupo))
dados_nasc_vivos_causas_evitavel <- sumarizar_dados_por_ano(dados_nasc_vivos, "i_ano_nasc", "i_ano_nasc") %>% select(-c(grupo))
dados_mort_nasc_causas_evitavel =  unir_mortalidade_nascidos_vivos_simples(dados_mortalidade_causas_evitavel, dados_nasc_vivos_causas_evitavel, colunas_em_comum = c('ano'))
dados_mort_nasc_causas_evitavel_2018_2022 = dados_mort_nasc_causas_evitavel %>%
select(-c(freq.y,log_taxa_mort)) %>%
pivot_wider(names_from = c("ano"), values_from = c("taxa_mort","freq.x")) %>%
select(freq.x_2018, taxa_mort_2018,
freq.x_2019, taxa_mort_2019,
freq.x_2020, taxa_mort_2020,
freq.x_2021, taxa_mort_2021,
freq.x_2022, taxa_mort_2022) %>%
na.omit()
pw_data_causas_evitavel = calculate_prais_winsten_summary_simples(dados_mort_nasc_causas_evitavel, 'Causas evitáveis')
dados_causas_evitavel = criar_tabela_prais_winsten_summary_total_simples(dados_mort_nasc_causas_evitavel_2018_2022, pw_data_causas_evitavel)
setwd("D:/projetos/consultoria/Carol")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = F)
library(tidyverse)
library(data.table)
library(readxl)
library(knitr)
library(kableExtra)
library(prais)
source("utils.R")
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
dados_mortalidade_radf = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "regiao"=i_desc_radf_res) %>%
data.table
dados_nasc_vivos_radf = dados_nasc_vivos %>%
group_by(i_ano_nasc, i_desc_radf_res_mae) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_nasc, "regiao"=i_desc_radf_res_mae) %>%
data.table
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_nasc_vivos = read.csv('dados/dados_nascidos_vivos.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao",
"assistencia_gestacao","atencao_parto","atencao_feto_nascido",
"diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
# filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_radf = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "regiao"=i_desc_radf_res) %>%
data.table
dados_nasc_vivos_radf = dados_nasc_vivos %>%
group_by(i_ano_nasc, i_desc_radf_res_mae) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_nasc, "regiao"=i_desc_radf_res_mae) %>%
data.table
dados_mort_nasc_radf = merge(dados_mortalidade_radf, dados_nasc_vivos_radf, by = c("ano", "regiao"), all = TRUE) %>%
mutate(freq.x = replace_na(freq.x,0),
taxa_mort = 1000*freq.x/freq.y,
log_taxa_mort = log(taxa_mort)) %>%
rename('grupo'=regiao) %>%
filter(log_taxa_mort != -Inf) %>%
filter(!(grupo %in% c("SIA","Arniqueiras","Lago Norte","Varjão","Núcleo Bandeirante","Paranoá","Fercal","Sol Nascente","Vicente Pires","Candangolândia")))
dados_mort_nasc_radf_2018_2022 = dados_mort_nasc_radf %>%
select(-c(freq.y,log_taxa_mort)) %>%
pivot_wider(names_from = c("ano"), values_from = c("taxa_mort","freq.x")) %>%
select(grupo, freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022) %>%
na.omit()
pw_data_radf = calculate_prais_winsten_summary(dados_mort_nasc_radf, "grupo", "log_taxa_mort", "ano")
data_radf = merge(dados_mort_nasc_radf_2018_2022, pw_data_radf, by = c("grupo"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
p_valor = round(as.numeric(p_valor), 3),
VPA = round(-1 + (10**coeficiente), 3),
IC_sup = round(-1 + 10**(qt(0.975, 4) * std_error), 2),
IC_inf = round(-1 + 10**(qt(0.025, 4) * std_error), 2),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
tendencia = ifelse(p_valor < 0.05, tendencia, "-"),
IC = paste(IC_inf, IC_sup, sep = " - ")) %>%
select(grupo, freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC, tendencia)
row.names(data_radf) = NULL
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
coef_corr = cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_y = max(dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_x = max(dados_pre_natal_taxa_mortalidade$taxa_mort)
dados_pre_natal_taxa_mortalidade %>%
ggplot(aes(taxa_mort, `Pre Natal`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Reta de regressão
theme_minimal() +  # Tema minimalista
ggtitle("Relação entre a taxa de mortalidade e o número de mães que \n tiverem adequada assistência na gestação, por localidade e ano") +  # Título do gráfico
xlab("Taxa de Mortalidade (por 1000 nascidos vivos)") +  # Rótulo do eixo X
ylab("Número de mães que receberam uma assistência \n adequada na gestação (acima de 5 atendimentos)") +
annotate("text", x = max_x, y = max_y, label = paste("r =", round(coef_corr, 2)), hjust = 1, vjust = 1, color = "black", size = 5)
# for(categoria in unique(dados_pre_natal_taxa_mortalidade$local)){
#
#   pre_natal = dados_pre_natal_taxa_mortalidade[dados_pre_natal_taxa_mortalidade$local == categoria, `Pre Natal`]
#
#   taxa_mort = dados_pre_natal_taxa_mortalidade[dados_pre_natal_taxa_mortalidade$local == categoria, `taxa_mort`]
#
#   print("#################")
#   print(categoria)
#   print(cor.test(pre_natal, taxa_mort))
#
# }
cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
dados_pre_natal_taxa_mortalidade$taxa_mort
dados_pre_natal_taxa_mortalidade$`Pre Natal`
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
filter(obitos != 0) %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
coef_corr = cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_y = max(dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_x = max(dados_pre_natal_taxa_mortalidade$taxa_mort)
dados_pre_natal_taxa_mortalidade %>%
ggplot(aes(taxa_mort, `Pre Natal`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Reta de regressão
theme_minimal() +  # Tema minimalista
ggtitle("Relação entre a taxa de mortalidade e o número de mães que \n tiverem adequada assistência na gestação, por localidade e ano") +  # Título do gráfico
xlab("Taxa de Mortalidade (por 1000 nascidos vivos)") +  # Rótulo do eixo X
ylab("Número de mães que receberam uma assistência \n adequada na gestação (acima de 5 atendimentos)") +
annotate("text", x = max_x, y = max_y, label = paste("r =", round(coef_corr, 2)), hjust = 1, vjust = 1, color = "black", size = 5)
dados_pre_natal_taxa_mortalidade$taxa_mort
dados_pre_natal_taxa_mortalidade$`Pre Natal`
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
filter(`Pre Natal1` != 0) %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
coef_corr = cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_y = max(dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_x = max(dados_pre_natal_taxa_mortalidade$taxa_mort)
dados_pre_natal_taxa_mortalidade %>%
ggplot(aes(taxa_mort, `Pre Natal`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Reta de regressão
theme_minimal() +  # Tema minimalista
ggtitle("Relação entre a taxa de mortalidade e o número de mães que \n tiverem adequada assistência na gestação, por localidade e ano") +  # Título do gráfico
xlab("Taxa de Mortalidade (por 1000 nascidos vivos)") +  # Rótulo do eixo X
ylab("Número de mães que receberam uma assistência \n adequada na gestação (acima de 5 atendimentos)") +
annotate("text", x = max_x, y = max_y, label = paste("r =", round(coef_corr, 2)), hjust = 1, vjust = 1, color = "black", size = 5)
cor.test(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
filter(`Pre Natal1` != 0) %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
coef_corr = cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_y = max(dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_x = max(dados_pre_natal_taxa_mortalidade$taxa_mort)
dados_pre_natal_taxa_mortalidade %>%
ggplot(aes(taxa_mort, `Pre Natal`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Reta de regressão
theme_minimal() +  # Tema minimalista
ggtitle("Relação entre a taxa de mortalidade por falta de assistência na gestação e a taxa de óbitos comparada com o número de mães que tiveram uma assistência adequada na gestação") +  # Título do gráfico
xlab("Taxa de Mortalidade por falta de assistência na gestação (por 1000 nascidos vivos)") +  # Rótulo do eixo X
ylab("Relação entre número de óbitos por falta de assitência na gestação e o número de mães que tiveram uma assistência adequada na gestação") +
annotate("text", x = max_x, y = max_y, label = paste("r =", round(coef_corr, 2)), hjust = 1, vjust = 1, color = "black", size = 5)
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
filter(`Pre Natal1` != 0) %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
coef_corr = cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_y = max(dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_x = max(dados_pre_natal_taxa_mortalidade$taxa_mort)
dados_pre_natal_taxa_mortalidade %>%
ggplot(aes(taxa_mort, `Pre Natal`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Reta de regressão
theme_minimal() +  # Tema minimalista
ggtitle("Relação entre a taxa de mortalidade por falta de assistência na gestação e a taxa de óbitos comparada com o número de mães que tiveram uma assistência adequada na gestação") +  # Título do gráfico
xlab("Taxa de Mortalidade por falta de assistência na gestação (por 1000 nascidos vivos)") +  # Rótulo do eixo X
ylab("Relação entre número de óbitos por falta de assitência \n na gestação e o número de mães que tiveram \n uma assistência adequada na gestação") +
annotate("text", x = max_x, y = max_y, label = paste("r =", round(coef_corr, 2)), hjust = 1, vjust = 1, color = "black", size = 5)
dados_mortalidade = read.csv('dados/dados_mortalidade_infantil.csv')
dados_descricao_cids = read.csv('descricao_tipo_cids.csv')
colnames(dados_descricao_cids) = c("i_cid_obito", "morte_evitavel","evitavel_imunoprevencao","assistencia_gestacao","atencao_parto","atencao_feto_nascido","diagnostico_tratamento","promocao_saude")
dados_mortalidade = merge(dados_mortalidade, dados_descricao_cids, by = c("i_cid_obito"), all = TRUE)
dados_mortalidade = dados_mortalidade %>%
filter(assistencia_gestacao == T) %>%
na.omit()
dados_mortalidade_local = dados_mortalidade %>%
group_by(i_ano_obito, i_desc_radf_res) %>%
summarise(freq = n()) %>%
rename("ano"=i_ano_obito, "local"=i_desc_radf_res) %>%
data.table
dados_pre_natal = read.csv('dados/dados_prenatal.csv',sep = ";", check.names = F, fileEncoding = 'Latin1') %>% rename("CNES" = `Unidade de Saúde - CNES`)
dados_cnes = read.csv('CNES.csv') %>%
select(-CNES2)
dados_pre_natal = merge(dados_pre_natal, dados_cnes, by = "CNES")
dados_pre_natal = dados_pre_natal %>%
mutate(ano = str_extract(`Competência`, '[0-9]{4}')) %>%
group_by(local, ano) %>%
# summarise(total = sum(`6 ou mais atendimentos`)/(sum(`6 ou mais atendimentos`)+sum(`De 1 a 3 atendimentos`)+sum(`De 4 a 5 atendimentos`))) %>%
summarise(total = sum(`6 ou mais atendimentos`)) %>%
mutate(ano = as.integer(ano))
dados_pre_natal_taxa_mortalidade = merge(dados_mort_nasc_radf %>% rename("local"="grupo"), dados_pre_natal, by = c("ano", "local"), all = TRUE) %>%
na.omit() %>%
rename("obitos"="freq.x",
"Nascidos vivos"="freq.y",
"Pre Natal1"="total") %>%
filter(`Pre Natal1` != 0) %>%
mutate("Pre Natal" = obitos/(`Pre Natal1`))
coef_corr = cor(dados_pre_natal_taxa_mortalidade$taxa_mort, dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_y = max(dados_pre_natal_taxa_mortalidade$`Pre Natal`)
max_x = max(dados_pre_natal_taxa_mortalidade$taxa_mort)
dados_pre_natal_taxa_mortalidade %>%
ggplot(aes(taxa_mort, `Pre Natal`))+
geom_point()+
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Reta de regressão
theme_minimal() +  # Tema minimalista
ggtitle("Relação entre a taxa de mortalidade por falta de assistência \n na gestação e a taxa de óbitos comparada com o número de mães \n que tiveram uma assistência adequada na gestação") +  # Título do gráfico
xlab("Taxa de Mortalidade por falta de assistência na gestação (por 1000 nascidos vivos)") +  # Rótulo do eixo X
ylab("Relação entre número de óbitos por falta de assitência \n na gestação e o número de mães que tiveram \n uma assistência adequada na gestação") +
annotate("text", x = max_x, y = max_y, label = paste("r =", round(coef_corr, 2)), hjust = 1, vjust = 1, color = "black", size = 5)
