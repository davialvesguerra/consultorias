pw = dados_mort_nasc_cor %>%
filter(cor == categoria) %>%
prais_winsten(log_taxa_mort~ano, data=., index="ano") %>%
summary
pw_data = data.table()
pw_data$coeficiente = pw$coefficients[2,1]
pw_data$std_error = pw$coefficients[2,2]
pw_data$est_ = pw$coefficients[2,3]
pw_data$p_valor = pw$coefficients[2,4]
pw_data$cor = categoria
pw_data_cor = rbind(pw_data_cor, pw_data)
}
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = (-1 + 10**(qt(0.975, 4)*std_error)),
IC_inf = (-1 + 10**(qt(0.025, 4)*std_error)))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = (-1 + 10**(qt(0.975, 4)*std_error)),
IC_inf = (-1 + 10**(qt(0.025, 4)*std_error))) %>%
mutate(IC = paste(IC_inf, IC_sup, collapse = "-"))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = (-1 + 10**(qt(0.975, 4)*std_error)),
IC_inf = (-1 + 10**(qt(0.025, 4)*std_error))) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-"))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-"))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>% view
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>% colnames()
select(freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia)
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>%
select(freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia)
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>%
select(freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia) %>%
kbl(caption="Mortalidade nas variáveis demográficas e sua respectiva taxa de mortalidade(por 1000 nascidos vivos), nos anos 2018 e 2022.",booktabs=T, col.names = c("Variáveis","n","Taxa","n","Taxa","p","VPA(%)","IC95%","Tendência"),format =  "latex") %>%
kable_styling(position = "center",latex_options=c("striped","HOLD_position")) %>%
add_header_above(c(" " = 1, "2018" = 2, "2022" = 2))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>%
select(freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia) %>%
kbl(caption="Mortalidade nas variáveis demográficas e sua respectiva taxa de mortalidade(por 1000 nascidos vivos), nos anos 2018 e 2022.",booktabs=T, col.names = c("Variáveis","n","Taxa","n","Taxa","p","VPA(%)","IC95%","Tendência"),format =  "latex") %>%
kable_styling(position = "center",latex_options=c("striped","HOLD_position")) %>%
add_header_above(c(" " = 1, "2018" = 2, "2022" = 2,
"p"=1,"VPA(%)"=1,"IC95%"=1,"Tendência"=1))
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>%
select(freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia) %>%
kbl(caption="Mortalidade nas variáveis demográficas e sua respectiva taxa de mortalidade(por 1000 nascidos vivos), nos anos 2018 e 2022.",booktabs=T, col.names = c("Variáveis","n","Taxa","n","Taxa","p","VPA(%)","IC95%","Tendência"),format =  "latex")
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>%
select(freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia) %>%
kbl(caption="Mortalidade nas variáveis demográficas e sua respectiva taxa de mortalidade(por 1000 nascidos vivos), nos anos 2018 e 2022.",booktabs=T, col.names = c("Variáveis","n","Taxa","n","Taxa","p","VPA(%)","IC95%","Tendência"),format =  "latex")
merge(dados_mort_nasc_cor_2018_2022, pw_data_cor, by = c("cor"), all = TRUE) %>%
na.omit() %>%
mutate(coeficiente = as.numeric(coeficiente),
std_error = as.numeric(std_error),
tendencia = ifelse(coeficiente < 0, "↓", "↑"),
p_valor = round(as.numeric(p_valor),3)) %>%
mutate(tendencia = ifelse(p_valor < 0.05, tendencia,"-"),
VPA = (-1+(10**coeficiente)),
IC_sup = round(-1 + 10**(qt(0.975, 4)*std_error),2),
IC_inf = round(-1 + 10**(qt(0.025, 4)*std_error),2)) %>%
mutate(IC = paste(IC_inf, IC_sup, sep = "-")) %>%
select(cor, freq.x_2018, taxa_mort_2018, freq.x_2022, taxa_mort_2022, p_valor, VPA, IC_sup, tendencia) %>%
kbl(caption="Mortalidade nas variáveis demográficas e sua respectiva taxa de mortalidade(por 1000 nascidos vivos), nos anos 2018 e 2022.",booktabs=T, col.names = c("Variáveis","n","Taxa","n","Taxa","p","VPA(%)","IC95%","Tendência"),format =  "latex") %>%
kable_styling(position = "center",latex_options=c("striped","HOLD_position")) %>%
add_header_above(c(" " = 1, "2018" = 2, "2022" = 2,
"p"=1,"VPA(%)"=1,"IC95%"=1,"Tendência"=1))
pnorm(1.22)
1/(10^6+ 10^6+10^6+ 10^6+10^6+ 10^6)
(10^6+ 10^6+10^6+ 10^6+10^6+ 10^6)
1/50063860
pbinom(q = 1,size = 10,prob = p)
p = 1/50063860
pbinom(q = 1,size = 10,prob = p)
dbinom(q = 1,size = 10,prob = p)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = T)
setwd('D:/projetos/consultoria/Deise')
setwd('D:/projetos/consultoria/Deise')
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = T)
setwd('D:/projetos/consultoria/Deise')
pacman::p_load('tidyverse')
library(tm)
library(SnowballC)
library(wordcloud)
library(knitr)
source('utils.R')
data = read.csv('data_docentes.csv', encoding = "UTF-8")
read.csv('dados_docentes_originais.csv', encoding = "UTF-8") %>% view
nome_cols = colnames(data)
#falta fazer:
#- diminuir as imagens
setwd('D:/projetos/consultoria/Deise')
pacman::p_load('tidyverse')
library(tm)
library(SnowballC)
library(wordcloud)
library(knitr)
source('utils.R')
data = read.csv('data_docentes.csv', encoding = "UTF-8")
nome_cols = colnames(data)
#falta fazer:
#- diminuir as imagens
colnames(data) = sapply(colnames(data), function(coluna) str_replace_all(coluna, "\\.", " "))
nome_cols = colnames(data)
data["Possui doutorado"] = "Não"
data["Possui pós doutorado"] = "Não"
data['Possui especialização Latu Sensus'] = sapply(data['Possui especialização Latu Sensus'], function(x) ifelse(x=="Sim","Sim","Não"))
data['Possui mestrado'] = sapply(data['Possui mestrado'], function(x) ifelse(x=="Sim. Em Educação","Sim","Não"))
escolaridade = c(
"Possui especialização Latu Sensus",
"Possui graduação",
"Possui mestrado",
"Possui doutorado",
"Possui pós doutorado")
data_escolaridade = data[escolaridade]
for(col in names(data_escolaridade)){
data_escolaridade[col] = sapply(data_escolaridade[col], function(x) ifelse(x =="Sim",1,0))
}
grau_escolaridade = rowSums(data_escolaridade)
escolaridade = sapply(grau_escolaridade, function(obs){
if(obs == 0){
return("Graduação")
}
if(obs == 1){
return("Especialização")
}
if(obs == 2){
return("Mestrado")
}
})
data['escolaridade'] = escolaridade
data['grau_escolaridade'] = grau_escolaridade
colunas_nao_uteis = c("Possui graduação","Tipo de graduação","Instituição de graduação","Possui especialização Latu Sensus","Instituição do Latu Sensus","Tipo do Latu Sensus","Instituição do mestrado","Tipo do mestrado","Possui doutorado","Instituição do doutorado","Tipo do doutorado","Possui pós doutorado","Instituição do pós doutorado","Tipo do pós doutorado" ,"Possui pós doutorado em outra área" )
data = data %>%
select(!all_of(colunas_nao_uteis)) %>%
rename("Coordenação de Regional de Ensino CRE de atuação" = `Modalidade de ensino atual`,
"Coordenação de Regional de Ensino CRE de lotação" = `Coordenação regional de ensino`)
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
setwd('D:/projetos/consultoria/Deise')
pacman::p_load('tidyverse')
library(tm)
library(SnowballC)
library(wordcloud)
library(knitr)
source('utils.R')
data = read.csv('data_docentes.csv', encoding = "UTF-8")
nome_cols = colnames(data)
#falta fazer:
#- diminuir as imagens
colnames(data) = sapply(colnames(data), function(coluna) str_replace_all(coluna, "\\.", " "))
nome_cols = colnames(data)
data["Possui doutorado"] = "Não"
data["Possui pós doutorado"] = "Não"
data['Possui especialização Latu Sensus'] = sapply(data['Possui especialização Latu Sensus'], function(x) ifelse(x=="Sim","Sim","Não"))
data['Possui mestrado'] = sapply(data['Possui mestrado'], function(x) ifelse(x=="Sim. Em Educação","Sim","Não"))
escolaridade = c(
"Possui especialização Latu Sensus",
"Possui graduação",
"Possui mestrado",
"Possui doutorado",
"Possui pós doutorado")
data_escolaridade = data[escolaridade]
for(col in names(data_escolaridade)){
data_escolaridade[col] = sapply(data_escolaridade[col], function(x) ifelse(x =="Sim",1,0))
}
grau_escolaridade = rowSums(data_escolaridade)
escolaridade = sapply(grau_escolaridade, function(obs){
if(obs == 0){
return("Graduação")
}
if(obs == 1){
return("Especialização")
}
if(obs == 2){
return("Mestrado")
}
})
data['escolaridade'] = escolaridade
data['grau_escolaridade'] = grau_escolaridade
colunas_nao_uteis = c("Possui graduação","Tipo de graduação","Instituição de graduação","Possui especialização Latu Sensus","Instituição do Latu Sensus","Tipo do Latu Sensus","Instituição do mestrado","Tipo do mestrado","Possui doutorado","Instituição do doutorado","Tipo do doutorado","Possui pós doutorado","Instituição do pós doutorado","Tipo do pós doutorado" ,"Possui pós doutorado em outra área" )
data = data %>%
select(!all_of(colunas_nao_uteis)) %>%
rename("Coordenação de Regional de Ensino CRE de atuação" = `Modalidade de ensino atual`,
"Coordenação de Regional de Ensino CRE de lotação" = `Coordenação regional de ensino`)
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos")) %>%
kable(., caption = "Frequência do tempo de docência na educação pública")
View(data)
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=F,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos")
)
View(data)
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
data$`Tempo de docência na educação pública`
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(!is_ordem_vars) ordem_vars = unique(tabela$var)
# tabela = tabela %>%
#   mutate(var = factor(var, ordem_vars))
#   arrange(desc(freq))
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(!is_ordem_vars) ordem_vars = unique(tabela$var)
tabela = tabela %>%
mutate(var = factor(var, ordem_vars))
arrange(desc(freq))
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(!is_ordem_vars) ordem_vars = unique(tabela$var)
tabela = tabela %>%
mutate('var' = factor('var', ordem_vars))
arrange(desc(freq))
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(!is_ordem_vars) ordem_vars = unique(tabela$var)
tabela = tabela %>%
mutate_(var = factor(var, ordem_vars))
arrange(desc(freq))
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(!is_ordem_vars) ordem_vars = unique(tabela$var)
tabela = tabela %>%
mutate(var = factor(var, ordem_vars)) %>%
arrange(desc(freq))
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(!is_ordem_vars) ordem_vars = unique(tabela$var)
tabela = tabela %>%
mutate(var = factor(var, ordem_vars)) %>%
arrange(var)
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela = function(data, coluna, is_nome_coluna = FALSE, nome_coluna="",is_ordem_vars=FALSE, ordem_vars = c()){
if(!is_nome_coluna) nome_coluna = coluna
tabela <- data %>%
rename('var'= coluna) %>%
select(var) %>%
group_by(var) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
mutate(freq_relativa = str_replace(str_c(round((freq/sum(freq))*100,2),"%"),'\\.',','))
if(is_ordem_vars){
tabela = tabela %>%
mutate(var = factor(var, ordem_vars)) %>%
arrange(var)
}
colnames(tabela) = c(nome_coluna, "Frequência \\ absoluta", "Frequência \\ relativa")
tabela
}
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=F,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos"))
criar_tabela(data, "Tempo de docência na educação pública",
is_ordem_vars=T,
ordem_vars = c("De 6 a 10 anos","De 11 a 15 anos",
"De 16 a 20 anos","De 21 a 25 anos",
"De 26 a 30 anos","Acima de 30 anos")) %>%
kable(., caption = "Frequência do tempo de docência na educação pública")
data["Tempo de docência na educação privada"]
data["Tempo de docência na educação privada"] %>% unique
criar_tabela(data, "Tempo de docência na educação privada",
is_ordem_vars=T,
ordem_vars = c("Nunca atuei","Menos de 1 ano","Até 5 anos","De 6 a 10 anos",
"De 11 a 15 anos","De 16 a 20 anos","De 21 a 25 anos",
"Não possuo"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
setwd('D:/projetos/consultoria/Deise')
pacman::p_load('tidyverse')
library(tm)
library(SnowballC)
library(wordcloud)
library(knitr)
source('utils.R')
data1 = read.csv('data_discentes.csv', encoding = "UTF-8")
nome_cols = colnames(data1)
colnames(data1) = sapply(colnames(data1), function(coluna) str_replace_all(coluna, "\\.", " "))
nome_cols = colnames(data1)
data1["Possui doutorado"] = "Não"
data1["Possui pós doutorado"] = "Não"
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = F)
install.packages("webshots")
install.packages("webshot")
webshot::install_phantomjs()
library(htmlwidgets)
setwd('D:/projetos/consultoria/Deise')
pacman::p_load('tidyverse')
library(tm)
library(SnowballC)
library(wordcloud)
library(knitr)
source('utils.R')
data = read.csv('data_docentes.csv', encoding = "UTF-8")
nome_cols = colnames(data)
#falta fazer:
#- diminuir as imagens
colnames(data) = sapply(colnames(data), function(coluna) str_replace_all(coluna, "\\.", " "))
nome_cols = colnames(data)
data["Possui doutorado"] = "Não"
data["Possui pós doutorado"] = "Não"
library(wordcloud2)
install.packages('wordcloud2')
